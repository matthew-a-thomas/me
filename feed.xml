<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-08-16T12:58:00+00:00</updated><id>/feed.xml</id><entry><title type="html">Terraforming Clouds</title><link href="/programming/2021/08/16/terraforming-clouds.html" rel="alternate" type="text/html" title="Terraforming Clouds" /><published>2021-08-16T00:00:00+00:00</published><updated>2021-08-16T00:00:00+00:00</updated><id>/programming/2021/08/16/terraforming-clouds</id><content type="html" xml:base="/programming/2021/08/16/terraforming-clouds.html">&lt;p&gt;&lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt; is a software tool for “infrastructure as
code”. “Infrastructure as code” just means that you deploy cloud resources
(databases, applications, and how they’re wired together) with a configuration
file. Terraform is a tool which reads its brand of configuration file and can
interact with several different clouds (Azure, Google Cloud, AWS, etc).&lt;/p&gt;

&lt;h2 id=&quot;the-good&quot;&gt;The good&lt;/h2&gt;

&lt;p&gt;Once you learn how to write Terraform configuration files you can put them into
source control and create a continuous integration pipeline so that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can fearlessly change cloud resources&lt;/li&gt;
  &lt;li&gt;Cloud resources are always in sync with source code&lt;/li&gt;
  &lt;li&gt;You can easily revert to a previous version of source code &lt;em&gt;and&lt;/em&gt; a previous
cloud setup&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are real benefits. You can have a continuous integration pipeline that
builds and tests your application, and then deploys it to the cloud while making
sure all the necessary infrastructure is in place and configured properly.&lt;/p&gt;

&lt;p&gt;And it’s awesome being able to put all the infrastructure in source control. It
feels a lot less fragile.&lt;/p&gt;

&lt;h2 id=&quot;the-bad&quot;&gt;The bad&lt;/h2&gt;

&lt;p&gt;You can’t do everything with Terraform; in theory it lags behind. When Azure
comes out with something new then someone from Microsoft has to update the
Terraform
&lt;a href=&quot;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&quot;&gt;“plugin” for Azure&lt;/a&gt;.
To be honest this isn’t a problem for me.&lt;/p&gt;

&lt;p&gt;Terraform will not show mercy to cloud resources that it controls. If you remove
a database from your configuration file then Terraform will not think twice
about deleting it. So make sure you keep regular backups (you would be doing
that anyway, right?) and in a storage container that isn’t under Terraform’s
control (otherwise your fat fingers will make it delete all your backups, too!)&lt;/p&gt;

&lt;p&gt;There is a learning curve.&lt;/p&gt;

&lt;h2 id=&quot;the-ugly&quot;&gt;The ugly&lt;/h2&gt;

&lt;p&gt;I’m not really sure how I would improve Terraform. The configuration language is
okay. The tooling feels complete. There is documentation for everything.&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;I think I’m going to use infrastructure as code techniques in all my future
cloud projects. You should, too!&lt;/p&gt;</content><author><name></name></author><category term="programming" /></entry><entry><title type="html">WPF’s Problem with Axes</title><link href="/programming/2021/07/26/wpf-problem-with-axes.html" rel="alternate" type="text/html" title="WPF’s Problem with Axes" /><published>2021-07-26T00:00:00+00:00</published><updated>2021-07-26T00:00:00+00:00</updated><id>/programming/2021/07/26/wpf-problem-with-axes</id><content type="html" xml:base="/programming/2021/07/26/wpf-problem-with-axes.html">&lt;p&gt;WPF performs layout in two passes. The first is called the “measure” pass. The
second is called the “arrange” pass.&lt;/p&gt;

&lt;p&gt;During the measure pass a control is queried for the minimum amount of space it
needs. Between that and the arrange pass the parent control decides how much
space to actually give it. Then the arrange pass happens: the control is told
the maximum amount of space it can use and it replies with how much space it
actually used.&lt;/p&gt;

&lt;p&gt;That’s a very powerful way to do layout. The system is flexible enough to make
all these different layouts possible:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Grid/table. The sizes of child controls are related through rows
and columns&lt;/li&gt;
  &lt;li&gt;Stack. In a vertical stack the widths of child controls are related, and they
get as much vertical space as they want&lt;/li&gt;
  &lt;li&gt;Wrapped list. Child controls are lined up. When one passes the end of the
line then it and all subsequent children drop down to the next line&lt;/li&gt;
  &lt;li&gt;Canvas. No size constraints or relations whatsoever between child controls.
They are manually placed and can take up as much space as they want&lt;/li&gt;
  &lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds great! But can you tell what they all have in common?&lt;/p&gt;

&lt;p&gt;Their number of children can be known ahead of time.&lt;/p&gt;

&lt;h2 id=&quot;the-challenge&quot;&gt;The challenge&lt;/h2&gt;

&lt;p&gt;Everyone is familiar with line graphs. Here’s one I threw together in Excel:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/wpf-problem-with-axes/line-graph.png&quot; alt=&quot;Line graph&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s focus on the vertical axis (the numbers on the left). How would you make
that in WPF?&lt;/p&gt;

&lt;h2 id=&quot;vertical-stack&quot;&gt;Vertical stack&lt;/h2&gt;

&lt;p&gt;It looks a lot like a vertical stack of text blocks, doesn’t it? Easy enough:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Vertical&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;15&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add some styling and you’re done, right?&lt;/p&gt;

&lt;p&gt;Wrong. How did you know to use increments of five? Excel used increments of five
because that’s just how large my chart happened to be. But if I squash it some:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/wpf-problem-with-axes/squashed.png&quot; alt=&quot;Squashed line graph&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;…then it uses a different increment.&lt;/p&gt;

&lt;p&gt;So how many text blocks should there be? You won’t know until you try to fit the
axis into a certain area.&lt;/p&gt;

&lt;p&gt;A chart axis is different than all of the layouts I listed above because a chart
axis does not know how many child tick marks it has until you put it somewhere.&lt;/p&gt;

&lt;h2 id=&quot;custom-control&quot;&gt;Custom control&lt;/h2&gt;

&lt;p&gt;Okay, so what is the soonest we can know how much space our axis has to work
with, so that we can decide how many child tick marks it should have?&lt;/p&gt;

&lt;p&gt;Well… we have access to that information as soon as the arrange pass. And we
can hook into that. How about this?&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Axis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameworkElement&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DependencyProperty&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TickTemplateProperty&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FrameworkElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LogicalChildren&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataTemplate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TickTemplate&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TickTemplateProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SetValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TickTemplateProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VisualChildrenCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ArrangeOverride&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finalSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Clear the current children&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;RemoveVisualChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;RemoveLogicalChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Figure out how many we need and add them&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeOfOneTick&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;???&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numTicks&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finalSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeOfOneTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numTicks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FrameworkElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TickTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LoadContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;AddLogicalChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// You want bindings to work in styles, right?&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;AddVisualChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// You want it to show up, right?&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;ApplyTickValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ApplyTickValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tickInterval&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30.0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tickInterval&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visual&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetVisualChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MeasureOverride&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;availableSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infiniteSize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PositiveInfinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PositiveInfinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infiniteSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is a lot of cruft since we’re manually managing both logical and visual
children. And we make some assumptions about the axis range and how tick
intervals are calculated. But those aren’t serious challenges.&lt;/p&gt;

&lt;p&gt;We managed to hook into the measure and arrange passes, and in the arrange pass
we are making the correct number of tick marks. And we even abstracted away the
job of creating a tick mark so that our axis control is more reusable.&lt;/p&gt;

&lt;p&gt;Mission accomplished? Nope! Do you see the issue?&lt;/p&gt;

&lt;p&gt;How do we know how large one tick mark is on the screen? If a tick is just a
simple text block with unchanging text then it’s very easy. WPF has
&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.formattedtext?view=net-5.0&quot;&gt;just the thing&lt;/a&gt;
for measuring text. But that doesn’t work for the data template above. What if
someone wants to make the tick marks a little more complex than plain old text?
We could manually perform measure and arrange passes on the first one within our
own arrange pass. But a lot of things only work within a logical tree. So we
would have to ensure that the first tick mark (the one we’re measuring) is
temporarily added to our logical tree during our arrange pass. But guess what
happens when our logical tree changes? WPF performs another layout pass on us!
So in figuring out how large one tick mark is within the arrange pass we end up
triggering another arrange pass, which will have to calculate how large a tick
mark is which will trigger another arrange pass, on and on forever.&lt;/p&gt;

&lt;p&gt;Note that bindings in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TickTemplate&lt;/code&gt; might also cause the tick marks to
change size. I’m glossing over this detail because ideally the next layout pass
would account for this change.&lt;/p&gt;

&lt;h2 id=&quot;the-dcc-law&quot;&gt;The DCC law&lt;/h2&gt;

&lt;p&gt;We cannot alter the number of children in either our measure or our arrange pass
because doing so triggers another layout pass and so on forever. I’m going to
call this the WPF Dynamic Child Count (DCC) law:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;At least one layout pass must be able to complete without altering the logical
  or visual trees&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we violate this law then we run into infinite loops and other trouble.&lt;/p&gt;

&lt;p&gt;This means that the happy path through both our measure and arrange passes must
operate on children that have already been created and added. In other words,
they should look as close as possible to this:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ArrangeOverride&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finalSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;childRect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Get location from somewhere&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DesiredSize&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Arrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;childRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Decide how much space we actually used&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MeasureOverride&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;availableSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;childSize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Compute child size somehow&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;childSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Decide what the minimum viable size is&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There’s a lot of hand waving there, but:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Neither the measure pass nor the arrange pass alters the logical tree&lt;/li&gt;
  &lt;li&gt;Neither pass creates children, but instead operates on children that are
already there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we aren’t breaking the DCC law.&lt;/p&gt;

&lt;p&gt;But now we have a chicken-and-egg problem. Where do the child tick marks come
from?&lt;/p&gt;

&lt;h2 id=&quot;the-compromise&quot;&gt;The compromise&lt;/h2&gt;

&lt;p&gt;The solution is a compromise: create the children in response to size changes:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Note: this isn't the only way to do this&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnRenderSizeChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SizeChangedInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_children&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Create tick mark children based on the current RenderSize&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OnRenderSizeChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizeInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why is this a compromise? Because now it’s impossible for our axis control to
be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Auto&lt;/code&gt;-sized. If we drop it into an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Auto&lt;/code&gt;-sized cell in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Grid&lt;/code&gt; then it
won’t show up because it’ll get scrunched out of view.&lt;/p&gt;

&lt;p&gt;Why is that? To answer that we have to look a little more closely at our axis in
this sequence of events:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Parent control performs a measure pass on us, telling us we have so much
space available and asking how much of it we need&lt;/li&gt;
  &lt;li&gt;We don’t have any children yet because our size hasn’t yet changed. What
amount of space will we say that we need?&lt;/li&gt;
  &lt;li&gt;Parent control decides on some amount of space to give us&lt;/li&gt;
  &lt;li&gt;Parent control performs an arrange pass on us, telling us we have so much
space available&lt;/li&gt;
  &lt;li&gt;We don’t have any children yet because our size hasn’t yet changed&lt;/li&gt;
  &lt;li&gt;After our arrange pass completes, WPF changes our size to the amount of
space we said we used&lt;/li&gt;
  &lt;li&gt;Since we have hooked into our own size changes, we decide that so many
children will fit, instantiate that number of children, and add them to our
logical and visual trees&lt;/li&gt;
  &lt;li&gt;If we added any children then WPF will cause our parent to perform another
layout pass over us, and the above steps might repeat&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In step #2, what amount of space will we say we need when we have no children
yet? Note: we cannot say we need as much space as we’re given (in other words we
cannot just return the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;availableSize&lt;/code&gt; parameter) because it’s common for
controls to be offered &lt;em&gt;infinite&lt;/em&gt; space and WPF throws an exception when you
return that. Some finite number has to be returned. But what? Let’s settle on
returning &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new Size(0, 0)&lt;/code&gt;, or no space. That tells our parent that we’re
really flexible and can fit anywhere. (As an aside: this is what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Canvas&lt;/code&gt; does.)&lt;/p&gt;

&lt;p&gt;Okay, so our parent knows that we don’t need any space. Guess what happens if
our parent is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Grid&lt;/code&gt; and we’re in an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Auto&lt;/code&gt;-sized cell? The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Grid&lt;/code&gt; gives us
no space! Step #4 happens and we’re told we have no space. Our only possible
reply in step #5 is that we used no space. So our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RenderSize&lt;/code&gt; gets set to zero,
obviously no child tick marks will fit in zero space so we don’t create any
children, so we don’t add any children, so our logical and visual trees don’t
change, so we’re done. Our axis won’t show up!&lt;/p&gt;

&lt;p&gt;It has to be told how large it is. It cannot be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Auto&lt;/code&gt;-sized.&lt;/p&gt;

&lt;p&gt;Pretty lame, right?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caution: the code above will likely not compile. It’s just inspirational
pseudocode written off the cuff.&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><category term="programming" /></entry><entry><title type="html">Fountain Codes</title><link href="/programming/2021/07/19/fountain-codes.html" rel="alternate" type="text/html" title="Fountain Codes" /><published>2021-07-19T00:00:00+00:00</published><updated>2021-07-19T00:00:00+00:00</updated><id>/programming/2021/07/19/fountain-codes</id><content type="html" xml:base="/programming/2021/07/19/fountain-codes.html">&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Fountain_code&quot;&gt;fountain code&lt;/a&gt; is a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Error_correction_code#Forward_error_correction&quot;&gt;forward error correction code&lt;/a&gt;
for lossy channels. In other words a fountain code is an
&lt;a href=&quot;https://en.wikipedia.org/wiki/Erasure_code&quot;&gt;erasure code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That’s just a fancy way to say that a fountain code is one of those things that
lets you send a message somewhere, have parts of your communication fail to make
it, and the other party will still be able to understand you clearly.&lt;/p&gt;

&lt;p&gt;Fountain codes aren’t the only thing that can do this. But they are interesting
for some reasons I’ll get into.&lt;/p&gt;

&lt;h2 id=&quot;the-short-explanation&quot;&gt;The short explanation&lt;/h2&gt;

&lt;p&gt;Send enough redundant information to the other party that on a good day you
wasted some time talking and on a bad day they can still piece together exactly
what you said.&lt;/p&gt;

&lt;h2 id=&quot;the-long-explanation&quot;&gt;The long explanation&lt;/h2&gt;

&lt;p&gt;What you will do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Split your binary message up into \(k\) parts&lt;/li&gt;
  &lt;li&gt;Pick a random subset of those \(k\) parts and XOR them together&lt;/li&gt;
  &lt;li&gt;Call that jumbled mess (with an indication of which pieces were XOR’d
together) a “row”&lt;/li&gt;
  &lt;li&gt;Send that row&lt;/li&gt;
  &lt;li&gt;Repeat at least \(k\) times&lt;/li&gt;
  &lt;li&gt;Repeat some more for good measure
    &lt;ul&gt;
      &lt;li&gt;On a good day you’ll only have to repeat a small number more times&lt;/li&gt;
      &lt;li&gt;On a bad day you’ll have to repeat several more times depending on how many 
 of your transmissions were lost&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What the other party will do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Gather as many rows as possible&lt;/li&gt;
  &lt;li&gt;Once they have at least \(k\) rows, try to solve a system of equations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that’s it!&lt;/p&gt;

&lt;h2 id=&quot;an-example&quot;&gt;An example&lt;/h2&gt;

&lt;p&gt;Suppose you want to send this message:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are its ASCII bytes in hexadecimal:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;0x48 0x69 0x21&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here are its ASCII bytes in binary:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000 01101001 00100001&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;sending-the-message&quot;&gt;Sending the message&lt;/h3&gt;

&lt;p&gt;There are three bytes, so let’s choose \(k = 3\) and split the message up
accordingly:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Part&lt;/th&gt;
      &lt;th&gt;Binary&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01101001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The next step is to choose a random subset of these three parts and XOR them
together. Let’s choose parts one and two. Keep in mind that \(\oplus\) means XOR
and \(01001000 \oplus 01101001 = 00100001\):&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parts&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1, 2&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;And we do that again. Let’s choose parts two and three:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parts&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1, 2&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2, 3&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;And let’s do that a third time, picking parts one, two, and three:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parts&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1, 2&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2, 3&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1, 2, 3&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00000000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;receiving-the-message&quot;&gt;Receiving the message&lt;/h3&gt;

&lt;p&gt;Now let’s pretend like we have received those three rows. We can represent them
as a system of equations:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Row&lt;/th&gt;
      &lt;th&gt;Part 1&lt;/th&gt;
      &lt;th&gt;Part 2&lt;/th&gt;
      &lt;th&gt;Part 3&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00000000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now just solve the system of equations. The row operation we’ll use is XOR. Here
are the steps to solve it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;XOR row 1 into row 3:

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Row&lt;/th&gt;
      &lt;th&gt;Part 1&lt;/th&gt;
      &lt;th&gt;Part 2&lt;/th&gt;
      &lt;th&gt;Part 3&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/li&gt;
&lt;li&gt;XOR row 3 into row 2:

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Row&lt;/th&gt;
      &lt;th&gt;Part 1&lt;/th&gt;
      &lt;th&gt;Part 2&lt;/th&gt;
      &lt;th&gt;Part 3&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code&gt;01101001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/li&gt;
&lt;li&gt;XOR row 2 into row 1:

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Row&lt;/th&gt;
      &lt;th&gt;Part 1&lt;/th&gt;
      &lt;th&gt;Part 2&lt;/th&gt;
      &lt;th&gt;Part 3&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code&gt;01101001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And it’s solved! Did you notice what is now in that last column? Look a little
more closely:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Binary&lt;/th&gt;
      &lt;th&gt;Hex&lt;/th&gt;
      &lt;th&gt;ASCII&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0x48&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01101001&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0x69&lt;/td&gt;
      &lt;td&gt;i&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0x21&lt;/td&gt;
      &lt;td&gt;!&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I’ll leave it as an exercise for you to figure out
&lt;a href=&quot;https://en.wikipedia.org/wiki/Overdetermined_system&quot;&gt;what would have happened&lt;/a&gt;
if we had gathered four rows instead of three. Or if we had gathered a different
three rows. Or if we had chosen something for \(k\) other than three. Or what
the probability is of being unable to decode the message when you have gathered
exactly \(n \geq k\) rows.&lt;/p&gt;

&lt;h2 id=&quot;some-interesting-properties&quot;&gt;Some interesting properties&lt;/h2&gt;

&lt;p&gt;Fountain codes are &lt;em&gt;rateless&lt;/em&gt;. That means that you don’t have to decide up front
how many rows you’re going to send. You can just keep sending them until you get
tired of it. This is different than
&lt;a href=&quot;https://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction&quot;&gt;Reed Solomon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fountain codes can easily be multicasted. Meaning several parties can send a
message over individually slow connections to a single party and the receiving
party will get it at the combined speed of all those connections. There are
\(2^k - 1\) unique and useful rows for every message of \(k\) parts. Because
that number gets very large very quickly there is no need to coordinate between
all the senders: each sender can just randomly generate rows and they’re more
than likely going to be unique and useful to the receiving party.&lt;/p&gt;

&lt;h2 id=&quot;some-downsides&quot;&gt;Some downsides&lt;/h2&gt;

&lt;p&gt;It’s pretty I/O intensive to generate a row. On average you have to read half of
the message each time.&lt;/p&gt;

&lt;p&gt;It’s pretty I/O intensive to solve the system of equations. If you use
&lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_elimination&quot;&gt;Gaussian Elimination&lt;/a&gt; then
you’re looking at \(O(k^2)\) row operations. And rows can be pretty large
depending on what \(k\) is and how large your message is.&lt;/p&gt;

&lt;p&gt;Fountain codes only help in &lt;em&gt;erasure&lt;/em&gt; channels. But many communication channels
in real life are &lt;em&gt;noisy&lt;/em&gt;. In practice that means you might have to transmit each
row wrapped in an error detection code (like CRC) which adds overhead.&lt;/p&gt;

&lt;p&gt;Throughput is strongly dependent on the size of each row. Rows that are too
large will usually have a greater chance of being lost through an erasure
channel. But row size is inversely proportional to \(k\), so too small a row
size means it will take a very long time for the receiving party to solve the
system of equations.&lt;/p&gt;

&lt;p&gt;You have to send information about which parts were XOR’d together which adds
overhead. This overhead can be very significant for small messages or large
values of \(k\).&lt;/p&gt;

&lt;h2 id=&quot;systematic-fountain-codes&quot;&gt;Systematic fountain codes&lt;/h2&gt;

&lt;p&gt;A &lt;em&gt;systematic&lt;/em&gt; fountain code just ensures that the first \(k\) rows that get
transmitted are the first \(k\) parts of the message in order.&lt;/p&gt;

&lt;p&gt;I’ll leave it as an exercise for you to think about why that might be helpful.
Hint: here’s what the first three generated rows would have been from our
example above if our fountain code was systematic:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Row&lt;/th&gt;
      &lt;th&gt;Part 1&lt;/th&gt;
      &lt;th&gt;Part 2&lt;/th&gt;
      &lt;th&gt;Part 3&lt;/th&gt;
      &lt;th&gt;\(\oplus\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01001000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01101001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;00100001&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/matthew-a-thomas/Fountain&quot;&gt;https://github.com/matthew-a-thomas/Fountain&lt;/a&gt;—fountain
codes applied to files.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/matthew-a-thomas/cs-fountain-codes&quot;&gt;https://github.com/matthew-a-thomas/cs-fountain-codes&lt;/a&gt;—simulated
performance of a few different fountain codes (or fountain-code-esque things).
The graphs on that page can be pretty confusing. Open an issue in that
repository if anything isn’t clear.&lt;/p&gt;</content><author><name></name></author><category term="programming" /></entry><entry><title type="html">The Dark Ages Are Now</title><link href="/misc/2021/06/22/dark-ages-are-now.html" rel="alternate" type="text/html" title="The Dark Ages Are Now" /><published>2021-06-22T00:00:00+00:00</published><updated>2021-06-22T00:00:00+00:00</updated><id>/misc/2021/06/22/dark-ages-are-now</id><content type="html" xml:base="/misc/2021/06/22/dark-ages-are-now.html">&lt;p&gt;I have emails from as recent as 2011 proving that I went to a few
&lt;a href=&quot;https://en.wikipedia.org/wiki/LAN_party&quot;&gt;LAN parties&lt;/a&gt; with some friends. I have
records of receipts, chat conversations about what PC upgrades we’d be making
for the events, what video games we were going to play. It was good clean fun.&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;I&lt;/em&gt; know for a fact that it happened. So do they.&lt;/p&gt;

&lt;p&gt;But &lt;em&gt;you&lt;/em&gt; try searching for
&lt;a href=&quot;https://www.google.com/search?q=ragelan+owensboro&quot;&gt;“RAGElan Owensboro”&lt;/a&gt;. What
do you find?&lt;/p&gt;

&lt;p&gt;Nothing.&lt;/p&gt;

&lt;p&gt;That was only a decade ago. One hundred years from now who is going to know that
it happened?&lt;/p&gt;

&lt;p&gt;Nobody.&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;If I wanted to make a point I would say spend some time on
&lt;a href=&quot;https://biblehub.com/matthew/16-18.htm&quot;&gt;something&lt;/a&gt; that is guaranteed to still
be around more than one hundred million years from now. Like the Lord’s church.&lt;/p&gt;</content><author><name></name></author><category term="misc" /></entry><entry><title type="html">Of God and the Holy Trinity</title><link href="/god/2021/06/12/of-god-and-the-holy-trinity.html" rel="alternate" type="text/html" title="Of God and the Holy Trinity" /><published>2021-06-12T00:00:00+00:00</published><updated>2021-06-12T00:00:00+00:00</updated><id>/god/2021/06/12/of-god-and-the-holy-trinity</id><content type="html" xml:base="/god/2021/06/12/of-god-and-the-holy-trinity.html">&lt;p&gt;&lt;a href=&quot;https://www.the1689confession.com/1689/chapter-2&quot;&gt;Chapter two, paragraph one&lt;/a&gt;
of the 1689 London Baptist Confession reads:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Lord our God is but one only living and true God; whose subsistence is in
  and of Himself, infinite in being and perfection; whose essence cannot be
  comprehended by any but Himself; a most pure spirit, invisible, without body,
  parts, or passions, who only hath immortality, dwelling in the light which no
  man can approach unto; who is immutable, immense, eternal, incomprehensible,
  almighty, every way infinite, most holy, most wise, most free, most absolute;
  working all things according to the counsel of His own immutable and most
  righteous will, for His own glory; most loving, gracious, merciful,
  long-suffering, abundant in goodness and truth, forgiving iniquity,
  transgression, and sin; the rewarder of them that diligently seek Him, and
  withal most just and terrible in His judgments, hating all sin, and who will
  by no means clear the guilty.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;annoying-things&quot;&gt;Annoying things&lt;/h2&gt;

&lt;p&gt;First, there are a few things this paragraph says about God which frustrate me.
I don’t want to change them—I think they’re quite accurate to
reality—but I am quickly frustrated when I think about them.&lt;/p&gt;

&lt;p&gt;Let me show you what I mean.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[God’s] essence cannot be comprehended by any but himself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, why not? Why isn’t it within my abilities to comprehend God? That insults
my pride. Which is annoying.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[God’s] subsistence is in and of himself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I don’t comprehend that. I thought I was smart. That’s annoying.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[God] dwells in the light which no man can approach unto&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well I’m fine if &lt;em&gt;other&lt;/em&gt; people aren’t able to approach unto that light. But I
thought I was special. Why can’t &lt;em&gt;I&lt;/em&gt; approach unto God’s light? That’s annoying.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[God] is only living&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;[God] is immutable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I don’t think anyone has ever seen something which was both &lt;em&gt;alive&lt;/em&gt; and
&lt;em&gt;immutable&lt;/em&gt;. In fact, I don’t think such a thing exists (other than God). And
God isn’t just partly alive but is &lt;em&gt;entirely&lt;/em&gt; alive. I thought only dead things
were immutable. And all the other things which are now alive are in fact in the
process of changing, of dying. Why can’t I comprehend him by comparing him to
something he has made? That’s annoying.&lt;/p&gt;

&lt;h2 id=&quot;amazing-things&quot;&gt;Amazing things&lt;/h2&gt;

&lt;p&gt;God exhaustively knows everything about himself. And he knows that he knows it.
And he knows that he knows that. And that. And yes, that too. And so on.&lt;/p&gt;

&lt;p&gt;As a programmer I’m sort of familiar with recursion. And so I know that
recursion is sort of like that. But at the same time there’s something lacking
in my attempts to describe God’s knowledge recursively. I think it has to do
with the difference between having an algorithm that can recursively compute
something—want to know if a number is prime? Easy, just find out if it’s
evenly divided by a number other than the number 1—versus already having
the answer. God already knows what &lt;em&gt;all&lt;/em&gt; the prime numbers are. It’s not that
God has some procedure he has to follow in order to arrive at his knowledge
(such as “write down ‘God knows that. And that. And that’ forever). No, God
already &lt;em&gt;has&lt;/em&gt; that knowledge in himself.&lt;/p&gt;

&lt;p&gt;In fact God has &lt;em&gt;always&lt;/em&gt; had all this knowledge. The Divine Nature has never
learned anything because he is immutable.&lt;/p&gt;

&lt;p&gt;Furthermore as a programmer I’m acutely aware of how difficult it is to make a
computer originate facts. All I know is how to make it operate on information it
gets from somewhere else. Yet all things exist &lt;em&gt;by reason of God&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And to realize that God is also “most loving, gracious, merciful”—that’s
amazing. Furthermore God is “most just and terrible in his judgments, hating all
sin, and who will by no means clear the guilty”—that’s amazing. And to
think that God became a man in order to purchase people from his own wrath by
dying for them—“amazing” just doesn’t do justice to the fact that God is
both just and the justifier of the one who has faith in Jesus Christ.&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;Comprehending God is too difficult for me. He is too different. He is too high.
I think my head is going to explode.&lt;/p&gt;</content><author><name></name></author><category term="god" /></entry><entry><title type="html">Plotting Data</title><link href="/programming/2020/12/18/plotting-data.html" rel="alternate" type="text/html" title="Plotting Data" /><published>2020-12-18T00:00:00+00:00</published><updated>2020-12-18T00:00:00+00:00</updated><id>/programming/2020/12/18/plotting-data</id><content type="html" xml:base="/programming/2020/12/18/plotting-data.html">&lt;p&gt;There are a couple of things that can make a line graph on the computer run
really slow. It can take a while to get all the data points, and it can take a
while to draw them all.&lt;/p&gt;

&lt;p&gt;I’m going to talk about how to draw them as quickly as possible.&lt;/p&gt;

&lt;h2 id=&quot;the-scenario&quot;&gt;The scenario&lt;/h2&gt;

&lt;p&gt;Let’s say you have have ten million data points tracing out the below curve and
you want to render the window in red.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/plotting-data/data-with-window.png&quot; alt=&quot;Data points with window&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Millions of data points take a &lt;em&gt;long&lt;/em&gt; time to draw. And it’s such a simple
shape. Surely it can be done more quickly?&lt;/p&gt;

&lt;h3 id=&quot;details-and-a-caveat&quot;&gt;Details and a caveat&lt;/h3&gt;

&lt;p&gt;Now is a good time to mention a caveat. But I need to explain something first.&lt;/p&gt;

&lt;p&gt;Keep in mind there are two coordinate systems. One of them is in the data, and
the other is on the screen. The data coordinate system is application specific.
The screen coordinate system is the location of pixels on the physical screen.&lt;/p&gt;

&lt;p&gt;The place where the rendered plot will land on the screen is called the
&lt;strong&gt;viewport&lt;/strong&gt;. It’s a rectangle in the screen coordinate system.&lt;/p&gt;

&lt;p&gt;The place in the data that shows up in the viewport we’ll call the
&lt;strong&gt;data window&lt;/strong&gt;. It’s also a rectangle but in the data coordinate system.&lt;/p&gt;

&lt;p&gt;So the red box above is the data window.&lt;/p&gt;

&lt;p&gt;The caveat is: for the rest of this article I’m going to pretend like the data
and screen coordinate systems are the same. It’s easier for me but the point
should be the same.&lt;/p&gt;

&lt;h3 id=&quot;parallelism&quot;&gt;Parallelism&lt;/h3&gt;

&lt;p&gt;A quick note about parallelism: if you have the opportunity to render in
parallel then that’s great. But I’m going to ignore parallelism because the
lessons in this article will also apply to it.&lt;/p&gt;

&lt;h3 id=&quot;drawing-api&quot;&gt;Drawing API&lt;/h3&gt;

&lt;p&gt;We’re going to need a drawing API. Here it is:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IDrawing&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MoveTo&lt;/code&gt; to start the drawing at some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;point&lt;/code&gt; (which is given in screen
coordinates). Then you call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LineTo&lt;/code&gt; to draw from the previous location to a
given &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;point&lt;/code&gt; (again given in screen coordinates).&lt;/p&gt;

&lt;p&gt;So to draw a 200x100 pixel rectangle you could do this:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawRectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDrawing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;naive-approach&quot;&gt;Naive approach&lt;/h2&gt;

&lt;p&gt;This will draw all the data points:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDrawing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It works. There’s nothing &lt;em&gt;incorrect&lt;/em&gt; about this. So it’s better than something
that doesn’t work.&lt;/p&gt;

&lt;p&gt;But this will be really slow when you have tons of data because it takes a lot
longer to draw the pixels on the screen than it does to loop through the data.&lt;/p&gt;

&lt;p&gt;Can we do better?&lt;/p&gt;

&lt;h2 id=&quot;reduce-horizontal-density-of-data-points&quot;&gt;Reduce horizontal density of data points&lt;/h2&gt;

&lt;p&gt;The first thing that people usually think of is to skip over data points that
don’t advance very far in a horizontal direction. They usually pick the positive
horizontal direction because their data increases in that direction. But I’ll
show code that handles both horizontal directions.&lt;/p&gt;

&lt;p&gt;This code does that:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDrawing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minDiscernableDifference&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minDiscernableDifference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;problems&quot;&gt;Problems&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Unlimited potential for data loss&lt;/strong&gt;. Here are some data points and whether
they’ll be chosen or ignored by this algorithm:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;X&lt;/th&gt;
      &lt;th&gt;Y&lt;/th&gt;
      &lt;th&gt;Displayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.9&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1.9&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2.9&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3.9&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4.9&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In other words what will be rendered is a straight line. There’s no limit to how
large (in the Y direction) the ignored coordinates can be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shimmer&lt;/strong&gt;. And guess what happens when you zoom in a little bit:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;X&lt;/th&gt;
      &lt;th&gt;Y&lt;/th&gt;
      &lt;th&gt;Displayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1.1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2.1&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2.2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3.2&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3.3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4.3&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4.4&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5.4&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5.5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now you get a really jagged line.&lt;/p&gt;

&lt;p&gt;And depending on the situation it can flash really quickly back and forth
between the two. It isn’t very pretty.&lt;/p&gt;

&lt;h2 id=&quot;reduce-horizontal-and-vertical-density-of-data-points&quot;&gt;Reduce horizontal and vertical density of data points&lt;/h2&gt;

&lt;p&gt;Both of those problems can be alleviated by comparing both X &lt;em&gt;and Y&lt;/em&gt;
coordinates, which is what most people try next.&lt;/p&gt;

&lt;p&gt;Something like this:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDrawing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minDiscernableDifference&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minDiscernableDifference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now anytime a point is sufficiently distant from the previous point &lt;em&gt;in any
direction&lt;/em&gt; it’ll show up on the screen. No more shimmer and no more data loss.&lt;/p&gt;

&lt;p&gt;But it’s still not perfect.&lt;/p&gt;

&lt;h3 id=&quot;problems-1&quot;&gt;Problems&lt;/h3&gt;

&lt;p&gt;These are actually problems with the previous approaches too, but…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Straight lines have too many points&lt;/strong&gt;. Here’s how some data points in a
straight line will be handled:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;X&lt;/th&gt;
      &lt;th&gt;Y&lt;/th&gt;
      &lt;th&gt;Displayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;That’s a lot more lines on the screen than this visually indistinguishable
equivalent:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;X&lt;/th&gt;
      &lt;th&gt;Y&lt;/th&gt;
      &lt;th&gt;Displayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Congested zig zags stay congested&lt;/strong&gt;. Here’s how some other data points in a
bunch of tight zig zags will be handled:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;X&lt;/th&gt;
      &lt;th&gt;Y&lt;/th&gt;
      &lt;th&gt;Displayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;That’s a lot more lines on the screen than this visually indistinguishable
equivalent:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;X&lt;/th&gt;
      &lt;th&gt;Y&lt;/th&gt;
      &lt;th&gt;Displayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;✗&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;✓&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;rectangles-and-bounding-boxes&quot;&gt;Rectangles and bounding boxes&lt;/h2&gt;

&lt;p&gt;I used the phrase “visually indistinguishable equivalent”. What does it mean? It
means we want to find the most simplified version of the data points that will
look just the same. It turns out this is a good goal.&lt;/p&gt;

&lt;p&gt;By looking at the problem from this perspective you can see why all the previous
strategies weren’t the best. Neither the naive approach nor the
horizontal+vertical density reduction approach were the most simplified. And the
horizontal density reduction approach isn’t visually identical.&lt;/p&gt;

&lt;p&gt;One thing that helps to get a much more simplified version (while still being
visually identical) is to think in terms of rectangles and bounding boxes.&lt;/p&gt;

&lt;p&gt;Each line segment is just like a skinny rectangle on the screen (lines at an
angle are the same as skinny rectangles tilted at an angle). And a bounding box
is just a rectangle that’s wide and long enough to contain some line segments
(it can also be tilted at an angle).&lt;/p&gt;

&lt;p&gt;So a single line segment will be visually indistinguishable from a group of line
segments if the bounding box around the group of line segments is similar enough
to the single line segment’s rectangle.&lt;/p&gt;

&lt;p&gt;In other words, from far enough away this group of line segments:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/plotting-data/group-line-segments.png&quot; alt=&quot;Group of line segments&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;…can be reduced to this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/plotting-data/reduced-line-segment.png&quot; alt=&quot;Reduced line segment&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The individual line segments won’t even have to connect because when you’re
zoomed out enough their pixels will be so relatively large that they’ll be
touching. When you zoom out far enough, render the data points, and look closely
at the pixels on the screen, then both of the above will look something like
this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/plotting-data/equivalent-line-segments.png&quot; alt=&quot;From far enough away&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-algorithm&quot;&gt;The algorithm&lt;/h3&gt;

&lt;p&gt;First we’ll need to encapsulate the idea of a bounding box around a set of
points:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoundingBox&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// The first point that was added to the bounding box&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EntryPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// A line segment that is visually equivalent to the bounding box.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MajorLineSegment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// The length of the bounding box.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MajorLineSegmentDistance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// The width of the bounding box.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MinorDistance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With some implementation of that, here’s some inspirational code that should get
you started in the right direction:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDrawing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minDiscernableDifference&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;isFirstPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MinorDistance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minDiscernableDifference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Draw the simplified version of the bounding box&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EntryPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MajorLineSegment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Reset and re-add the current point so it's ready for the next iteration&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Draw the simplified version of the bounding box so that the last data&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// points aren't lost&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EntryPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boundingBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MajorLineSegment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MoveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I’m leaving it as an exercise for you to fix this code to take care of drawing
the bounding box correctly (if at all) when too few points have been added to
it&lt;/li&gt;
  &lt;li&gt;You’ll also want to think about the case when some of the bounding box’s
points aren’t far enough apart to warrant drawing them&lt;/li&gt;
  &lt;li&gt;You’ll have to implement the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BoundingBox&lt;/code&gt; class&lt;/li&gt;
  &lt;li&gt;This was only loosely inspired by working code I wrote so it probably has
other bugs. Sorry I can’t just post up the code I wrote—it belongs to my
employer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hints:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Why are we drawing any line segments that lie entirely outside the viewport?
You don’t want to just check if individual points are in the viewport,
because a line can have both endpoints outside the viewport yet it still needs
to be drawn because it crosses through the viewport. You want
&lt;a href=&quot;https://en.wikipedia.org/wiki/Line_clipping&quot; target=&quot;_blank&quot;&gt;line clipping&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;My implementation of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BoundingBox.Add&lt;/code&gt; (not shown here) has time complexity
\(O(n^2)\). In that case and with the above code it would actually be faster
to just draw all the points than figure out the optimal bounding box around a
sufficiently long and straight string of data points. Hint: you don’t have to
simplify all the data points in only a single fine-grained pass…
&lt;a href=&quot;https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm&quot; target=&quot;_blank&quot;&gt;divide and conquer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I don’t know how to implement a perfectly minimal bounding box algorithm. I
ran out of time thinking about it and only came up with a merely good enough
one. (Sure, bounding boxes that only sit straight on one of their sides are
really fast and easy—just min/max the points to get each of the four
corners—But the only kind of bounding box that’s useful here is one that
can be rotated in any orientation.) But an elegant way to form a good enough
bounding box for a set of points is to treat the two points farthest from one
another in that set as the major axis (giving the direction and length of the
bounding box), and the maximum distance of the points from that line as the
minor axis distance (giving the width of the bounding box). It’s not perfect,
but it works pretty well. If I needed a better implementation then I would
think harder about forming a convex polygon around the set of data points (I
think there are fast algorithms for that) and then figure out how to fit a
rectangle of minimal area around that polygon (which I suspect could be done
quickly somehow)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also I’ll just briefly point out that if you are trying to establish and
maintain the correctness of this kind of stuff &lt;em&gt;only&lt;/em&gt; by running a UI and seeing
how it looks on the screen in various scenarios, then you’re doing it wrong.
This is one of those cases where everything can be broken down into small
“units” of responsibility and then &lt;em&gt;unit tested&lt;/em&gt; with automated tests, with only
the occasional sanity check by firing up a UI. Enough has been written about
unit testing elsewhere so that’s all I’ll say here.&lt;/p&gt;

&lt;h3 id=&quot;downsides&quot;&gt;Downsides&lt;/h3&gt;

&lt;p&gt;This is definitely more complicated than the other algorithms. I think this is
somewhere in the territory of optimizations. Make sure you have something that
at least works before spending a ton of time on this.&lt;/p&gt;

&lt;p&gt;It doesn’t help if your data is going randomly in all directions. Let’s hope
you’re not trying to plot data like that.&lt;/p&gt;

&lt;h3 id=&quot;upsides&quot;&gt;Upsides&lt;/h3&gt;

&lt;p&gt;This approach can perform &lt;em&gt;much&lt;/em&gt; better than the other algorithms.&lt;/p&gt;

&lt;p&gt;As long as a single axis exists in which your data is non-decreasing then it’ll
work. &lt;em&gt;No matter the direction of that axis&lt;/em&gt;. It’ll also work just as well in a
few other limited cases.&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;Thinking in terms of bounding boxes should get you most of the way there.&lt;/p&gt;</content><author><name></name></author><category term="programming" /></entry><entry><title type="html">Who Is Jesus?</title><link href="/bible/2020/12/13/who-is-jesus.html" rel="alternate" type="text/html" title="Who Is Jesus?" /><published>2020-12-13T00:00:00+00:00</published><updated>2020-12-13T00:00:00+00:00</updated><id>/bible/2020/12/13/who-is-jesus</id><content type="html" xml:base="/bible/2020/12/13/who-is-jesus.html">&lt;p&gt;Every year we celebrate Christmas. But what is so much more special about Jesus
that we celebrate &lt;em&gt;His&lt;/em&gt; birthday instead of anyone else?&lt;/p&gt;

&lt;p&gt;To quote the song,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This, this is Christ the King&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But He isn’t just any king. He is…&lt;/p&gt;

&lt;h2 id=&quot;the-promised-son-of-david&quot;&gt;The promised Son of David&lt;/h2&gt;

&lt;p&gt;Here’s &lt;a href=&quot;https://www.esv.org/search/?q=2 Samuel 7:4&amp;ndash;17&quot; target=&quot;_blank&quot;&gt;2 Samuel 7:4–17&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;But that same night the word of the LORD came to Nathan, “Go and tell my
  servant David, ‘Thus says the LORD: Would you build me a house to dwell in? I
  have not lived in a house since the day I brought up the people of Israel from
  Egypt to this day, but I have been moving about in a tent for my dwelling. In
  all places where I have moved with all the people of Israel, did I speak a
  word with any of the judges of Israel, whom I commanded to shepherd my people
  Israel, saying, “Why have you not built me a house of cedar?”’ Now, therefore,
  thus you shall say to my servant David, ‘Thus says the LORD of hosts, I took
  you from the pasture, from following the sheep, that you should be prince over
  my people Israel. And I have been with you wherever you went and have cut off
  all your enemies from before you. And I will make for you a great name, like
  the name of the great ones of the earth. And I will appoint a place for my
  people Israel and will plant them, so that they may dwell in their own place
  and be disturbed no more. And violent men shall afflict them no more, as
  formerly, from the time that I appointed judges over my people Israel. And I
  will give you rest from all your enemies. &lt;strong&gt;Moreover, the LORD declares to you
  that the LORD will make you a house. When your days are fulfilled and you lie
  down with your fathers, I will raise up your offspring after you, who shall
  come from your body, and I will establish his kingdom. He shall build a house
  for my name, and I will establish the throne of his kingdom forever. &lt;em&gt;I will
  be to him a father, and he shall be to me a son&lt;/em&gt;. When he commits iniquity, I
  will discipline him with the rod of men, with the stripes of the sons of men,
  but my steadfast love will not depart from him, as I took it from Saul, whom I
  put away from before you. And your house and your kingdom shall be made sure
  forever before me. Your throne shall be established forever.&lt;/strong&gt;’” In accordance
  with all these words, and in accordance with all this vision, Nathan spoke to
  David.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;God promised that there would be a man to sit on David’s throne &lt;em&gt;forever&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Did you catch how God said this man would “be to me a son”? That’s where the
title “Son of God” comes from. Which means Jesus is also…&lt;/p&gt;

&lt;h2 id=&quot;the-son-of-god&quot;&gt;The Son of God&lt;/h2&gt;

&lt;p&gt;Here’s &lt;a href=&quot;https://www.esv.org/search/?q=Psalm 2:7&amp;ndash;12&quot; target=&quot;_blank&quot;&gt;Psalm 2:7–12&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I will tell of the decree:
	The LORD said to me, “&lt;strong&gt;You are my Son&lt;/strong&gt;; today I have begotten you. Ask of me,
  and I will make the nations your heritage, and the ends of the earth your
  possession. You shall break them with a rod of iron and dash them in pieces
  like a potter’s vessel.” Now therefore, O kings, be wise; be warned, O rulers
  of the earth. Serve the LORD with fear, and rejoice with trembling. Kiss &lt;strong&gt;the
  Son&lt;/strong&gt;, lest he be angry, and you perish in the way, for his wrath is quickly
  kindled. Blessed are all who take refuge in him.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do you see the strong connection between rulership and the title “Son of God”?&lt;/p&gt;

&lt;p&gt;That’s all behind the voice that came from heaven during Jesus’s baptism in
&lt;a href=&quot;https://www.esv.org/search/?q=Matthew 3:13&amp;ndash;17&quot; target=&quot;_blank&quot;&gt;Matthew 3:13–17&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Then Jesus came from Galilee to the Jordan to John, to be baptized by him.
  John would have prevented him, saying, “I need to be baptized by you, and do
  you come to me?” But Jesus answered him, “Let it be so now, for thus it is
  fitting for us to fulfill all righteousness.” Then he consented. And when
  Jesus was baptized, immediately he went up from the water, and behold, the
  heavens were opened to him, and he saw the Spirit of God descending like a
  dove and coming to rest on him; and behold, &lt;strong&gt;a voice from heaven said, “This
  is my beloved Son, with whom I am well pleased.”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not only is Jesus the Son of God, He is also…&lt;/p&gt;

&lt;h2 id=&quot;the-son-of-man&quot;&gt;The Son of Man&lt;/h2&gt;

&lt;p&gt;Remember &lt;a href=&quot;https://www.esv.org/search/?q=Daniel 7:13&amp;ndash;14&quot; target=&quot;_blank&quot;&gt;Daniel 7:13–14&lt;/a&gt;?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I saw in the night visions, and behold, with the clouds of heaven there came
  one like &lt;strong&gt;a son of man&lt;/strong&gt;, and he came to the Ancient of Days and was
  presented before him. And to him was given dominion and glory and a kingdom,
  that all peoples, nations, and languages should serve him; his dominion is an
  everlasting dominion, which shall not pass away, and his kingdom one that
  shall not be destroyed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This title also has strong connections to rulership and authority.&lt;/p&gt;

&lt;p&gt;Jesus loved to apply this title to himself. Recall
&lt;a href=&quot;https://www.esv.org/search/?q=Mark 14:61&amp;ndash;62&quot; target=&quot;_blank&quot;&gt;Mark 14:61–62&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The high priest asked Jesus, “Are you the Christ, the Son of the Blessed?” And
  Jesus said, “I am, and you will see &lt;strong&gt;the Son of Man&lt;/strong&gt; seated at the right
  hand of Power, and coming with the clouds of heaven.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-promised-offspring-of-adam-and-eve&quot;&gt;The promised offspring of Adam and Eve&lt;/h2&gt;

&lt;p&gt;Here’s &lt;a href=&quot;https://www.esv.org/search/?q=Genesis 3:14&amp;ndash;15&quot; target=&quot;_blank&quot;&gt;Genesis 3:14–15&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The LORD God said to the serpent, “Because you have done this, cursed are you
  above all livestock and above all beasts of the field; on your belly you shall
  go, and dust you shall eat all the days of your life. &lt;strong&gt;I will put enmity
  between you and the woman, and between your offspring and her offspring; he
  shall bruise your head, and you shall bruise his heel.&lt;/strong&gt;”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jesus bruised the head of Satan by utterly defeating him, like
&lt;a href=&quot;https://www.esv.org/search/?q=Hebrews 2:14&amp;ndash;15&quot; target=&quot;_blank&quot;&gt;Hebrews 2:14–15&lt;/a&gt; says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Since therefore the children share in flesh and blood, he himself likewise
  partook of the same things, that through death he might destroy the one who
  has the power of death, that is, the devil, and deliver all those who through
  fear of death were subject to lifelong slavery.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words Jesus isn’t just a king. He is also a redeemer. Which means He
purchases something. But He isn’t just any redeemer, He is the one God promised
would deliver Adam and Eve’s children from their sin.&lt;/p&gt;

&lt;p&gt;This isn’t the only time God promised such a one. Jesus is also…&lt;/p&gt;

&lt;h2 id=&quot;the-promised-offspring-of-abraham&quot;&gt;The promised offspring of Abraham&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.esv.org/search/?q=Genesis 12:1&amp;ndash;3&quot; target=&quot;_blank&quot;&gt;Genesis 12:1–3&lt;/a&gt; is talking about Jesus
when it says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Now the LORD said to Abram, “Go from your country and your kindred and your
  father’s house to the land that I will show you. And I will make of you a
  great nation, and I will bless you and make your name great, so that you will
  be a blessing. I will bless those who bless you, and him who dishonors you I
  will curse, and &lt;strong&gt;in you all the families of the earth shall be blessed.&lt;/strong&gt;”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That’s talking about an offspring of Abraham by whom the nations would be
blessed. This is what Paul meant when he wrote
&lt;a href=&quot;https://www.esv.org/search/?q=Galatians 3:7&amp;ndash;9&quot; target=&quot;_blank&quot;&gt;Galatians 3:7–9&lt;/a&gt; and
&lt;a href=&quot;https://www.esv.org/search/?q=Galatians 3:16&quot; target=&quot;_blank&quot;&gt;Galatians 3:16&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Know then that it is those of faith who are the sons of Abraham. And the
  Scripture, foreseeing that God would justify the Gentiles by faith, preached
  the gospel beforehand to Abraham, saying, “In you shall all the nations be
  blessed.” So then, those who are of faith are blessed along with Abraham, the
  man of faith.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Now the promises were made to Abraham and to his offspring. It does not say,
  “And to offsprings,” referring to many, but referring to one, “And to your
  offspring,” who is Christ.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This blessing on the nations came through Jesus’s bloody death, which also makes
Him…&lt;/p&gt;

&lt;h2 id=&quot;the-lamb-of-god&quot;&gt;The Lamb of God&lt;/h2&gt;

&lt;p&gt;Remember Abraham and Isaac, how Abraham told Isaac that God would provide the
sacrificial lamb? That was pointing forward to Jesus.&lt;/p&gt;

&lt;p&gt;Remember Passover? The blood of a lamb marked the doorposts of people whom God
passed over in His judgment. That was pointing forward to Jesus.&lt;/p&gt;

&lt;p&gt;This is why John the Baptist said (in
&lt;a href=&quot;https://www.esv.org/search/?q=John 1:29&quot; target=&quot;_blank&quot;&gt;John 1:29&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The next day [John] saw Jesus coming toward him, and said, “Behold, the Lamb
  of God, who takes away the sin of the world!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what Peter meant in
&lt;a href=&quot;https://www.esv.org/search/?q=1 Peter 1:18&amp;ndash;19&quot; target=&quot;_blank&quot;&gt;1 Peter 1:18–19&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You were ransomed from the futile ways inherited from your forefathers, not
  with perishable things such as silver or gold, but with the precious blood of
  Christ, &lt;strong&gt;like that of a lamb without blemish or spot&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what John saw in &lt;a href=&quot;https://www.esv.org/search/?q=Revelation 5&quot; target=&quot;_blank&quot;&gt;Revelation 5&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Then I saw in the right hand of him who was seated on the throne a scroll
  written within and on the back, sealed with seven seals. And I saw a mighty
  angel proclaiming with a loud voice, “Who is worthy to open the scroll and
  break its seals?” And no one in heaven or on earth or under the earth was able
  to open the scroll or to look into it, and I began to weep loudly because no
  one was found worthy to open the scroll or to look into it. And one of the
  elders said to me, “Weep no more; behold, the Lion of the tribe of Judah, the
  Root of David, has conquered, so that he can open the scroll and its seven
  seals.” And between the throne and the four living creatures and among the
  elders I saw &lt;strong&gt;a Lamb standing, as though it had been slain&lt;/strong&gt;, with seven
  horns and with seven eyes, which are the seven spirits of God sent out into
  all the earth. And he went and took the scroll from the right hand of him who
  was seated on the throne. And when he had taken the scroll, the four living
  creatures and the twenty-four elders fell down before the Lamb, each holding a
  harp, and golden bowls full of incense, which are the prayers of the saints.
  And they sang a new song, saying, “Worthy are you to take the scroll and to
  open its seals, for you were slain, and &lt;strong&gt;by your blood you ransomed people&lt;/strong&gt;
  for God	from every tribe and language and people and nation, and you have made
  them a kingdom and priests to our God, and they shall reign on the earth.”
  Then I looked, and I heard around the throne and the living creatures and the
  elders the voice of many angels, numbering myriads of myriads and thousands of
  thousands, saying with a loud voice, “&lt;strong&gt;Worthy is the Lamb who was slain&lt;/strong&gt;, to
  receive power and wealth and wisdom and might and honor and glory and
  blessing!” And I heard every creature in heaven and on earth and under the
  earth and in the sea, and all that is in them, saying, “To him who sits on the
  throne &lt;strong&gt;and to the Lamb&lt;/strong&gt; be blessing and honor and glory and might forever
  and ever!” And the four living creatures said, “Amen!” and the elders fell
  down and worshiped.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And it isn’t idolatrous to worship Jesus because He is…&lt;/p&gt;

&lt;h2 id=&quot;god-incarnate&quot;&gt;God incarnate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.esv.org/search/?q=John 1:1&amp;ndash;3&quot; target=&quot;_blank&quot;&gt;John 1:1–3&lt;/a&gt; and
&lt;a href=&quot;https://www.esv.org/search/?q=John 1:14&amp;ndash;18&quot; target=&quot;_blank&quot;&gt;John 1:14–18&lt;/a&gt; say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the beginning was the Word, and the Word was with God, and the Word was
  God. He was in the beginning with God. All things were made through him, and
  without him was not any thing made that was made.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And the Word became flesh and dwelt among us, and we have seen his glory,
  glory as of the only Son from the Father, full of grace and truth. (John bore
  witness about him, and cried out, “This was he of whom I said, ‘He who comes
  after me ranks before me, because he was before me.’”) For from his fullness
  we have all received, grace upon grace. For the law was given through Moses;
  grace and truth came through Jesus Christ. No one has ever seen God; the only
  God, who is at the Father’s side, he has made him known.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;Jesus is he of whom it was said in
&lt;a href=&quot;https://www.esv.org/search/?q=Isaiah 9:6&amp;ndash;7&quot; target=&quot;_blank&quot;&gt;Isaiah 9:6–7&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For to us a child is born, to us a son is given; and the government shall be
  upon his shoulder, and his name shall be called Wonderful Counselor, Mighty
  God, Everlasting Father, Prince of Peace. Of the increase of his government
  and of peace there will be no end, on the throne of David and over his
  kingdom, to establish it and to uphold it with justice and with righteousness
  from this time forth and forevermore. The zeal of the LORD of hosts will do
  this.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="bible" /></entry><entry><title type="html">What Doesn’t Create a Marriage?</title><link href="/bible/2020/12/07/what-doesnt-create-marriage.html" rel="alternate" type="text/html" title="What Doesn’t Create a Marriage?" /><published>2020-12-07T00:00:00+00:00</published><updated>2020-12-07T00:00:00+00:00</updated><id>/bible/2020/12/07/what-doesnt-create-marriage</id><content type="html" xml:base="/bible/2020/12/07/what-doesnt-create-marriage.html">&lt;p&gt;Is a marriage certificate necessary? Is a marriage only valid in a church? Does
a marriage exist only after physical intimacy?&lt;/p&gt;

&lt;p&gt;This post will be brief and limited. Maybe I’ll flesh these things out later.
I’m learning what the Bible says about marriage, divorce, and remarriage and
wanted to jot down some things.&lt;/p&gt;

&lt;h2 id=&quot;marriage-certificates&quot;&gt;Marriage certificates&lt;/h2&gt;

&lt;p&gt;They aren’t strictly necessary. They fall under “obeying the governing
authorities” but a marriage can still technically exist without them.&lt;/p&gt;

&lt;p&gt;Trivially, marriages have been around longer than marriage certificates.&lt;/p&gt;

&lt;p&gt;Okay, sure my state wasn’t even a state when the Bible was written, but what
about older equivalents to government-issued certificates? Well, if you can find
civil government’s involvement in Genesis 2 then you’re a better man than me.&lt;/p&gt;

&lt;h2 id=&quot;church&quot;&gt;Church&lt;/h2&gt;

&lt;p&gt;It isn’t strictly necessary to get married by a church.&lt;/p&gt;

&lt;p&gt;Again, many marriages in the Bible happened outside of any religious context yet
were still considered valid.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href=&quot;https://www.esv.org/search/?q=1 Corinthians 7:12&amp;ndash;13&quot; target=&quot;_blank&quot;&gt;1 Corinthians 7:12–13&lt;/a&gt; talks
about believing people having unbelieving spouses. The unbelieving spouses
wouldn’t be spouses at all if the marriage were only valid in the context of the
church. Jesus commanded faithfulness in marriages
(&lt;a href=&quot;https://www.esv.org/search/?q=Matthew 5:32&quot; target=&quot;_blank&quot;&gt;Matthew 5:32&lt;/a&gt;;
&lt;a href=&quot;https://www.esv.org/search/?q=Matthew 19:9&quot; target=&quot;_blank&quot;&gt;Matthew 19:9&lt;/a&gt;) that existed prior to the New
Testament Church. And there are other examples in the Bible of marriages
performed with very little fanfare and even without involvement by religious
authorities.&lt;/p&gt;

&lt;h2 id=&quot;intercourse&quot;&gt;Intercourse&lt;/h2&gt;

&lt;p&gt;Biblical marriage must exist prior to intercourse. That’s clear from 1
Corinthians 7. In the Bible’s terms intercourse outside of marriage is not good.
And Paul said it’s better to get married than burn with passion, because in
marriage there is a God-ordained outlet for the passion.&lt;/p&gt;

&lt;p&gt;In other words there’s room for intercourse only &lt;em&gt;after&lt;/em&gt; marriage. So that can’t
be what creates a marriage&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;None of these things are what create a marriage.&lt;/p&gt;</content><author><name></name></author><category term="bible" /></entry><entry><title type="html">Glorifying God</title><link href="/bible/2020/12/05/glorifying-god.html" rel="alternate" type="text/html" title="Glorifying God" /><published>2020-12-05T00:00:00+00:00</published><updated>2020-12-05T00:00:00+00:00</updated><id>/bible/2020/12/05/glorifying-god</id><content type="html" xml:base="/bible/2020/12/05/glorifying-god.html">&lt;p&gt;John Piper is well known for coining
&lt;a href=&quot;https://www.desiringgod.org/topics/christian-hedonism&quot; target=&quot;_blank&quot;&gt;this phrase&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;God is most glorified in us when we are most satisfied in him.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I want to take a look at where he found this in the Bible, then think about an
objection that people have raised.&lt;/p&gt;

&lt;h2 id=&quot;biblical-basis&quot;&gt;Biblical basis&lt;/h2&gt;

&lt;p&gt;Take a look at &lt;a href=&quot;https://www.esv.org/search/?q=Philippians 1:18&amp;ndash;26&quot; target=&quot;_blank&quot;&gt;Philippians 1:18–26&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What then? Only that in every way, whether in pretense or in truth, Christ is
  proclaimed, and in that I rejoice.&lt;/p&gt;

  &lt;p&gt;Yes, and I will rejoice, for I know that through your prayers and the help of
  the Spirit of Jesus Christ this will turn out for my deliverance, as it is my
  eager expectation and hope that I will not be at all ashamed, but that with
  full courage now as always &lt;strong&gt;Christ will be honored in my body, whether by
  life or by death. For to me to live is Christ, and to die is gain.&lt;/strong&gt; If I am
  to live in the flesh, that means fruitful labor for me. Yet which I shall
  choose I cannot tell. I am hard pressed between the two. &lt;strong&gt;My desire is to
  depart and be with Christ, for that is far better.&lt;/strong&gt; But to remain in the
  flesh is more necessary on your account. Convinced of this, I know that I will
  remain and continue with you all, for your progress and joy in the faith, so
  that in me you may have ample cause to glory in Christ Jesus, because of my
  coming to you again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notice these things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Paul said Christ would be honored by Paul’s life and by his death&lt;/li&gt;
  &lt;li&gt;Christ would be honored by Paul’s life because to live is Christ&lt;/li&gt;
  &lt;li&gt;Christ would be honored by Paul’s death because to die is gain—it is
far better to depart and be with Christ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In both cases (life and death) Paul said Christ would be honored, and he
connects both cases directly to his desire for Christ.&lt;/p&gt;

&lt;p&gt;I understand that to be the heart of Piper’s statement.&lt;/p&gt;

&lt;p&gt;I think it’s very fair to conclude from Philippians 1 that God is glorified in
us when we are satisfied in Him. But &lt;em&gt;most&lt;/em&gt; glorified when we are &lt;em&gt;most&lt;/em&gt;
satisfied in Him? I don’t think that necessarily comes from Philippians 1 alone.
But let’s keep looking at the Bible.&lt;/p&gt;

&lt;p&gt;First, recall &lt;a href=&quot;https://www.esv.org/search/?q=Exodus 20:3&quot; target=&quot;_blank&quot;&gt;Exodus 20:3&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You shall have no other gods before me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the Bible’s terms, to worship another god is called “idolatry”.&lt;/p&gt;

&lt;p&gt;Now consider what &lt;a href=&quot;https://www.esv.org/search/?q=Colossians 3:5&quot; target=&quot;_blank&quot;&gt;Colossians 3:5&lt;/a&gt; and
&lt;a href=&quot;https://www.esv.org/search/?q=Ephesians 5:5&quot; target=&quot;_blank&quot;&gt;Ephesians 5:5&lt;/a&gt; say about idolatry:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Put to death therefore what is earthly in you: sexual immorality, impurity,
  passion, evil desire, and &lt;strong&gt;covetousness, which is idolatry.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;For you may be sure of this, that everyone who is sexually immoral or impure,
  or &lt;strong&gt;who is covetous (that is, an idolater)&lt;/strong&gt;, has no inheritance in the
  kingdom of Christ and God.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So in the Bible’s terms, idolatry is more than worshiping Baal. It is also the
love of stuff that isn’t God.&lt;/p&gt;

&lt;p&gt;So the Bible says that there is only one holy option for what occupies the top
shelf of our hearts and desires: God. In other words there is no other holy
choice but to be most satisfied in God.&lt;/p&gt;

&lt;p&gt;I didn’t go into a lot of detail but I think that’s enough to establish from the
Bible that God is most glorified in us when we are most satisfied in Him.&lt;/p&gt;

&lt;h2 id=&quot;an-objection&quot;&gt;An objection&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://templestream.blogspot.com/2017/09/argument-hedonism-piper-idolatry-templestream-warden.html?m=1&quot; target=&quot;_blank&quot;&gt;Here is an objection&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;According to the law of identity, “joy in God” is not God, and God is not
  “joy in God.”&lt;/li&gt;
    &lt;li&gt;Seeking as the highest aim anything but God is idolatry.&lt;/li&gt;
    &lt;li&gt;Therefore, seeking joy in God as the highest aim is idolatry.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;The author also states this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Let me be clear that I am not denying that we should find our greatest joy in
  God. Rather, that seeing God merely as a means to our greatest joy is not
  glorifying to God and is actually harmful to our relationship with God.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not sure where to go with this. On the one hand the author is right that
seeing God as a means to an end is idolatry. On the other hand I don’t
understand how this is an objection against Piper’s thesis.&lt;/p&gt;

&lt;p&gt;It’s a little subtle but there can be a difference between seeking joy in God
and seeking God. By definition, seeking God means you are desiring Him. So to
have God as one’s highest aim means that God is one’s chief pleasure. But if
one’s pleasure of God somehow becomes more important than the person of God then
something is wrong. It’s subtle, but I think the author is technically right.&lt;/p&gt;

&lt;p&gt;But I’m not sure how meaningful this argument is in general. Consider what
happens when we cut another argument from the same template:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;According to the law of identity, any action is not God, and God is not an
action&lt;/li&gt;
  &lt;li&gt;Seeking as the highest aim anything but God is idolatry&lt;/li&gt;
  &lt;li&gt;Seeking God is an action&lt;/li&gt;
  &lt;li&gt;Therefore, “seeking God” as the highest aim is idolatry&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Is that helpful? I guess there could somehow be a difference between the pursuit
of the pursuit of God and the pursuit of God. But that doesn’t move the chains
very far.&lt;/p&gt;

&lt;p&gt;And at the end of the day I don’t see how any form of argument from that
template can make it untrue that God is most glorified in us when we are most
satisfied in Him.&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;The point is that God is most glorified in us when we are most satisfied in Him.&lt;/p&gt;

&lt;p&gt;How do you view God? Is He your highest pleasure? If not then consider what the
Bible says about idolatry on the one hand and what is most glorifying to God on
the other.&lt;/p&gt;</content><author><name></name></author><category term="bible" /></entry><entry><title type="html">WebAssembly’s Name</title><link href="/programming/2020/11/19/wasm-name.html" rel="alternate" type="text/html" title="WebAssembly’s Name" /><published>2020-11-19T00:00:00+00:00</published><updated>2020-11-19T00:00:00+00:00</updated><id>/programming/2020/11/19/wasm-name</id><content type="html" xml:base="/programming/2020/11/19/wasm-name.html">&lt;p&gt;Here’s what &lt;a href=&quot;https://webassembly.org/&quot; target=&quot;_blank&quot;&gt;WebAssembly&lt;/a&gt; has to say
about itself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WebAssembly (abbreviated Wasm) is a binary instruction format for a
  stack-based virtual machine. Wasm is designed as a portable compilation target
  for programming languages, enabling deployment on the web for client and
  server applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve been learning WASM recently. I think I’m coming out of the
&lt;a href=&quot;https://www.gartner.com/en/research/methodologies/gartner-hype-cycle&quot; target=&quot;_blank&quot;&gt;Trough of Disillusionment&lt;/a&gt;.
Let me explain why.&lt;/p&gt;

&lt;h2 id=&quot;hype-its-not-just-web&quot;&gt;Hype: it’s not just web!&lt;/h2&gt;

&lt;p&gt;First, you need to understand that
&lt;a href=&quot;https://webassembly.org/docs/non-web/&quot; target=&quot;_blank&quot;&gt;it isn’t limited to just the internet&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;While WebAssembly is designed to run on the Web, it is also desirable for it
  to be able to execute well in other environments, including everything from
  minimal shells for testing to full-blown application environments e.g. on
  servers in datacenters, on IoT devices, or mobile/desktop apps. It may even be
  desirable to execute WebAssembly embedded within larger programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right now with very little effort (thanks to
&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime&quot; target=&quot;_blank&quot;&gt;two&lt;/a&gt;
&lt;a href=&quot;https://github.com/wasmerio/wasmer&quot; target=&quot;_blank&quot;&gt;libraries&lt;/a&gt;
alone) you can run WASM programs &lt;em&gt;in&lt;/em&gt; all these languages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C&lt;/li&gt;
  &lt;li&gt;C++&lt;/li&gt;
  &lt;li&gt;C#&lt;/li&gt;
  &lt;li&gt;Elixir&lt;/li&gt;
  &lt;li&gt;Go&lt;/li&gt;
  &lt;li&gt;Java&lt;/li&gt;
  &lt;li&gt;JavaScript (both inside and outside of a browser)&lt;/li&gt;
  &lt;li&gt;PHP&lt;/li&gt;
  &lt;li&gt;Postgres&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;R&lt;/li&gt;
  &lt;li&gt;Ruby&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And right now you can compile/convert
&lt;a href=&quot;https://github.com/appcypher/awesome-wasm-langs&quot; target=&quot;_blank&quot;&gt;all these languages and more&lt;/a&gt;
into WASM:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C&lt;/li&gt;
  &lt;li&gt;C++&lt;/li&gt;
  &lt;li&gt;C#&lt;/li&gt;
  &lt;li&gt;COBOL&lt;/li&gt;
  &lt;li&gt;Go&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;TypeScript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WASM is pretty flexible. It has provisions for interacting with the host
environment but it isn’t overly opinionated about it. There’s a way to call
host-provided functions (called “imports”). This has enabled the WebAssembly
System Interface (WASI) spec, which is basically a pared-down set of POSIX
functions.&lt;/p&gt;

&lt;p&gt;Solomon Hykes, the co-founder of Docker,
&lt;a href=&quot;https://twitter.com/solomonstre/status/1111004913222324225&quot; target=&quot;_blank&quot;&gt;said this about WASM+WASI&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If WASM+WASI existed in 2008, we wouldn’t have needed to created (sic) Docker.
  That’s how important it is. Webassembly on the server is the future of
  computing. A standardized system interface was the missing link. Let’s hope
  WASI is up to the task!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let me say that again: WASM (plus a spec for some imported functions) can do
everything that Docker does.&lt;/p&gt;

&lt;p&gt;These are all Good Things™. These kinds of things make me &lt;em&gt;very&lt;/em&gt; excited
as a programmer.&lt;/p&gt;

&lt;p&gt;But something fishy is going on. Because it’s called &lt;em&gt;Web&lt;/em&gt; Assembly.&lt;/p&gt;

&lt;h2 id=&quot;reality-it-reeks-of-internet&quot;&gt;Reality: it reeks of internet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/groups/wg/wasm/participants&quot; target=&quot;_blank&quot;&gt;These are some of the people paying for its development&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;W3C&lt;/li&gt;
  &lt;li&gt;Google&lt;/li&gt;
  &lt;li&gt;Facebook&lt;/li&gt;
  &lt;li&gt;Apple&lt;/li&gt;
  &lt;li&gt;Microsoft&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do all of these big-name organizations have in common? The internet.&lt;/p&gt;

&lt;p&gt;Now to be fair those aren’t the only organizations involved. But…&lt;/p&gt;

&lt;p&gt;WASM is opinionated about function calls. It’s clear that function calls were
designed in the context of C/C++ and &lt;em&gt;JavaScript&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There is a lot of momentum pushing to additionally implement reference types.
And not just reference types but even &lt;em&gt;null&lt;/em&gt;. And not just that but they are
pushing for &lt;em&gt;garbage collection instructions&lt;/em&gt;. It’s clear from reading the
designers’ comments online that the driving force behind these things is again
&lt;em&gt;JavaScript&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There is interest in expanding support so that more languages can be compiled to
WASM, but it’s clear the goal is always to get those languages to run &lt;em&gt;in a
browser&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So which is it? Is it for the web or not?&lt;/p&gt;

&lt;p&gt;Why don’t they just save garbage collection and reference graphs for a layer
built on top of WASM? Because they want GC languages to be able to run in
today’s internet browsers with minimal delay.&lt;/p&gt;

&lt;p&gt;If I want to host WASM programs for purposes completely unrelated to the
internet, how long do you think it’ll be before I’m forced to introduce internet
concepts into the programs, or into the host? It won’t be long until WASM hosts
will have to have garbage collection. Is garbage collection universal outside
the internet? No. Is it universal to JavaScript? Yes.&lt;/p&gt;

&lt;h2 id=&quot;reality-it-isnt-assembly&quot;&gt;Reality: it isn’t assembly&lt;/h2&gt;

&lt;p&gt;I don’t know of a single assembly language that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Has garbage collection instructions&lt;/li&gt;
  &lt;li&gt;Has nullable reference types&lt;/li&gt;
  &lt;li&gt;Forces structured control flow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I might be wrong. There might be other “assembly” languages with those
things. But those things certainly don’t sound like
“&lt;a href=&quot;https://webassembly.org/&quot; target=&quot;_blank&quot;&gt;common hardware capabilities&lt;/a&gt;”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WebAssembly aims to execute at native speed by taking advantage of &lt;strong&gt;common
  hardware capabilities&lt;/strong&gt; available on a wide range of platforms.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So why did they both plan those things and call it Web &lt;em&gt;Assembly&lt;/em&gt;?&lt;/p&gt;

&lt;h2 id=&quot;the-point&quot;&gt;The point&lt;/h2&gt;

&lt;p&gt;Coming out of the Trough of Disillusionment implies I’ve crested the Peak of
Inflated Expectations. So what was I expecting?&lt;/p&gt;

&lt;p&gt;I was expecting the One Language to Rule Them All. I was expecting a universal
assembly language.&lt;/p&gt;

&lt;p&gt;WASM just isn’t what I was hoping for.&lt;/p&gt;

&lt;p&gt;Is it good for running programs in today’s internet browsers? Sure. But I think
it is being influenced too much by today’s internet technologies. And we all
know how fast the internet changes.&lt;/p&gt;

&lt;p&gt;So I’d stick to the web for WebAssembly.&lt;/p&gt;</content><author><name></name></author><category term="programming" /></entry></feed>